// <auto-generated />
using System;
using DataAccessLayer.Dbcontext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(SapaFoRestRmsContext))]
    partial class SapaFoRestRmsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DomainAccessLayer.Models.Announcement", b =>
                {
                    b.Property<int>("AnnouncementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnnouncementId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AnnouncementId")
                        .HasName("PK__Announce__9DE44574FCC6531E");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<DateTime?>("CheckIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckOut")
                        .HasColumnType("datetime");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AttendanceId")
                        .HasName("PK__Attendan__8B69261CA90042EB");

                    b.HasIndex("StaffId");

                    b.ToTable("Attendance", (string)null);
                });

            modelBuilder.Entity("DomainAccessLayer.Models.BrandBanner", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BannerId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Active");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("BannerId")
                        .HasName("PK__BrandBan__32E86AD1BEC82691");

                    b.HasIndex("CreatedBy");

                    b.ToTable("BrandBanners");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Combo", b =>
                {
                    b.Property<int>("ComboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComboId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ComboId")
                        .HasName("PK__Combos__DD42582ED39A0BC4");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.ComboItem", b =>
                {
                    b.Property<int>("ComboItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComboItemId"));

                    b.Property<int>("ComboId")
                        .HasColumnType("int");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ComboItemId")
                        .HasName("PK__ComboIte__EE32F8052CD60470");

                    b.HasIndex("ComboId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("ComboItems");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<int?>("LoyaltyPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64D856DD828A");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("EventId")
                        .HasName("PK__Events__7944C8104BD3C2A9");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ReorderLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IngredientId")
                        .HasName("PK__Ingredie__BEAEB25ACD112DE2");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.InventoryBatch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly?>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseOrderDetailId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantityRemaining")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("BatchId")
                        .HasName("PK__Inventor__5D55CE5868089E90");

                    b.HasIndex("IngredientId");

                    b.HasIndex("PurchaseOrderDetailId");

                    b.ToTable("InventoryBatches");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.KitchenTicket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<string>("CourseType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.HasKey("TicketId")
                        .HasName("PK__KitchenT__712CC607458F9C2B");

                    b.HasIndex("OrderId");

                    b.ToTable("KitchenTickets");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.KitchenTicketDetail", b =>
                {
                    b.Property<int>("TicketDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketDetailId"));

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("TicketDetailId")
                        .HasName("PK__KitchenT__39BFBDE6C33E07F4");

                    b.HasIndex("OrderDetailId");

                    b.HasIndex("TicketId");

                    b.ToTable("KitchenTicketDetails");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.MarketingCampaign", b =>
                {
                    b.Property<int>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Active");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CampaignId")
                        .HasName("PK__Marketin__3F5E8A994B3A216D");

                    b.HasIndex("CreatedBy");

                    b.ToTable("MarketingCampaigns");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.MenuCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId")
                        .HasName("PK__MenuCate__19093A0BBB85F1C6");

                    b.ToTable("MenuCategories");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CourseType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("MenuItemId")
                        .HasName("PK__MenuItem__8943F72267633489");

                    b.HasIndex("CategoryId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<decimal?>("TotalAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BCF098341D1");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("OrderDetailId")
                        .HasName("PK__OrderDet__D3B9D36CA2DB7F7A");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("DiscountAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("FinalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Vatamount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("VATAmount");

                    b.Property<decimal?>("Vatpercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasDefaultValue(10m)
                        .HasColumnName("VATPercent");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A3858E58FB6");

                    b.HasIndex("OrderId");

                    b.HasIndex("VoucherId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Payroll", b =>
                {
                    b.Property<int>("PayrollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayrollId"));

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("MonthYear")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .IsFixedLength();

                    b.Property<decimal?>("NetSalary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<decimal?>("TotalBonus")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalPenalty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("TotalWorkDays")
                        .HasColumnType("int");

                    b.HasKey("PayrollId")
                        .HasName("PK__Payroll__99DFC672704E2373");

                    b.HasIndex("StaffId");

                    b.ToTable("Payroll", (string)null);
                });

            modelBuilder.Entity("DomainAccessLayer.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderId"));

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseOrderId")
                        .HasName("PK__Purchase__036BACA49E3BAAAB");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.PurchaseOrderDetail", b =>
                {
                    b.Property<int>("PurchaseOrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderDetailId"));

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("PurchaseOrderDetailId")
                        .HasName("PK__Purchase__5026B698B2854271");

                    b.HasIndex("IngredientId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderDetails");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantityNeeded")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("RecipeId")
                        .HasName("PK__Recipes__FDD988B0DF0083A6");

                    b.HasIndex("IngredientId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Regulation", b =>
                {
                    b.Property<int>("RegulationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegulationId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RegulationId")
                        .HasName("PK__Regulati__A192C7E99A0E3BC4");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Regulations");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.HasKey("ReservationId")
                        .HasName("PK__Reservat__B7EE5F24CA6A82D8");

                    b.HasIndex("CustomerId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.ReservationTable", b =>
                {
                    b.Property<int>("ReservationTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationTableId"));

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("ReservationTableId")
                        .HasName("PK__Reservat__A32A1796F8F3916A");

                    b.HasIndex("TableId");

                    b.HasIndex(new[] { "ReservationId", "TableId" }, "UQ_Reservation_Table")
                        .IsUnique();

                    b.ToTable("ReservationTables");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.RestaurantIntro", b =>
                {
                    b.Property<int>("IntroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntroId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntroId")
                        .HasName("PK__Restaura__303BA93E4A2E3861");

                    b.HasIndex("CreatedBy");

                    b.ToTable("RestaurantIntro", (string)null);
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1A130D6FE2");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B61607CE6A2D3")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.SalaryRule", b =>
                {
                    b.Property<int>("RuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RuleId"));

                    b.Property<int?>("BaseWorkDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(26);

                    b.Property<decimal?>("BonusPerShift")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("FullSalaryCondition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(26);

                    b.Property<decimal?>("PenaltyAbsent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal?>("PenaltyLate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.HasKey("RuleId")
                        .HasName("PK__SalaryRu__110458E235EAB065");

                    b.ToTable("SalaryRules");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShiftId"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("ShiftId")
                        .HasName("PK__Shifts__C0A83881495D0B69");

                    b.HasIndex("StaffId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SalaryBase")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StaffId")
                        .HasName("PK__Staffs__96D4AB17BB2B00FA");

                    b.HasIndex("UserId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.StockTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<int?>("BatchId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("TransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TransactionId")
                        .HasName("PK__StockTra__55433A6BCADEE2CE");

                    b.HasIndex("BatchId");

                    b.HasIndex("IngredientId");

                    b.ToTable("StockTransactions");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactInfo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SupplierId")
                        .HasName("PK__Supplier__4BE666B426C1529C");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.SystemLogo", b =>
                {
                    b.Property<int>("LogoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogoId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LogoName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("LogoId")
                        .HasName("PK__SystemLo__C620158D671959EF");

                    b.HasIndex("CreatedBy");

                    b.ToTable("SystemLogos");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Available");

                    b.Property<string>("TableNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TableId")
                        .HasName("PK__Tables__7D5F01EE063230D4");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Active");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C331B3280");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053492261D22")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Voucher", b =>
                {
                    b.Property<int>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoucherId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DiscountType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("MaxDiscount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("MinOrderValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Active");

                    b.HasKey("VoucherId")
                        .HasName("PK__Vouchers__3AEE7921766B4882");

                    b.HasIndex(new[] { "Code" }, "UQ__Vouchers__A25C5AA74763DC38")
                        .IsUnique();

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Announcement", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.User", "CreatedByNavigation")
                        .WithMany("Announcements")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Announcements_Users");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Attendance", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Staff", "Staff")
                        .WithMany("Attendances")
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("FK__Attendanc__Staff__208CD6FA");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.BrandBanner", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.User", "CreatedByNavigation")
                        .WithMany("BrandBanners")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_BrandBanners_Users");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.ComboItem", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Combo", "Combo")
                        .WithMany("ComboItems")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ComboItem__Combo__22751F6C");

                    b.HasOne("DomainAccessLayer.Models.MenuItem", "MenuItem")
                        .WithMany("ComboItems")
                        .HasForeignKey("MenuItemId")
                        .IsRequired()
                        .HasConstraintName("FK__ComboItem__MenuI__236943A5");

                    b.Navigation("Combo");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Customer", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.User", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Customers__UserI__245D67DE");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Event", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.User", "CreatedByNavigation")
                        .WithMany("Events")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Events_Users");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.InventoryBatch", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Ingredient", "Ingredient")
                        .WithMany("InventoryBatches")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK__Inventory__Ingre__2645B050");

                    b.HasOne("DomainAccessLayer.Models.PurchaseOrderDetail", "PurchaseOrderDetail")
                        .WithMany("InventoryBatches")
                        .HasForeignKey("PurchaseOrderDetailId")
                        .HasConstraintName("FK__Inventory__Purch__2739D489");

                    b.Navigation("Ingredient");

                    b.Navigation("PurchaseOrderDetail");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.KitchenTicket", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Order", "Order")
                        .WithMany("KitchenTickets")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__KitchenTi__Order__2A164134");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.KitchenTicketDetail", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.OrderDetail", "OrderDetail")
                        .WithMany("KitchenTicketDetails")
                        .HasForeignKey("OrderDetailId")
                        .IsRequired()
                        .HasConstraintName("FK__KitchenTi__Order__282DF8C2");

                    b.HasOne("DomainAccessLayer.Models.KitchenTicket", "Ticket")
                        .WithMany("KitchenTicketDetails")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__KitchenTi__Ticke__29221CFB");

                    b.Navigation("OrderDetail");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.MarketingCampaign", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.User", "CreatedByNavigation")
                        .WithMany("MarketingCampaigns")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_MarketingCampaigns_Users");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.MenuItem", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.MenuCategory", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__MenuItems__Categ__2BFE89A6");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Order", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Orders__Customer__2EDAF651");

                    b.HasOne("DomainAccessLayer.Models.Reservation", "Reservation")
                        .WithMany("Orders")
                        .HasForeignKey("ReservationId")
                        .HasConstraintName("FK__Orders__Reservat__2FCF1A8A");

                    b.Navigation("Customer");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.OrderDetail", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.MenuItem", "MenuItem")
                        .WithMany("OrderDetails")
                        .HasForeignKey("MenuItemId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__MenuI__2CF2ADDF");

                    b.HasOne("DomainAccessLayer.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Order__2DE6D218");

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Payment", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__OrderI__30C33EC3");

                    b.HasOne("DomainAccessLayer.Models.Voucher", "Voucher")
                        .WithMany("Payments")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("FK__Payments__Vouche__31B762FC");

                    b.Navigation("Order");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Payroll", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Staff", "Staff")
                        .WithMany("Payrolls")
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("FK__Payroll__StaffId__32AB8735");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.PurchaseOrder", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("FK__PurchaseO__Suppl__3587F3E0");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.PurchaseOrderDetail", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Ingredient", "Ingredient")
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK__PurchaseO__Ingre__339FAB6E");

                    b.HasOne("DomainAccessLayer.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PurchaseO__Purch__3493CFA7");

                    b.Navigation("Ingredient");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Recipe", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Ingredient", "Ingredient")
                        .WithMany("Recipes")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK__Recipes__Ingredi__367C1819");

                    b.HasOne("DomainAccessLayer.Models.MenuItem", "MenuItem")
                        .WithMany("Recipes")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Recipes__MenuIte__37703C52");

                    b.Navigation("Ingredient");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Regulation", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.User", "CreatedByNavigation")
                        .WithMany("Regulations")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Regulations_Users");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Reservation", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Custo__395884C4");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.ReservationTable", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Reservation", "Reservation")
                        .WithMany("ReservationTables")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Reser__3A4CA8FD");

                    b.HasOne("DomainAccessLayer.Models.Table", "Table")
                        .WithMany("ReservationTables")
                        .HasForeignKey("TableId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Table__3B40CD36");

                    b.Navigation("Reservation");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.RestaurantIntro", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.User", "CreatedByNavigation")
                        .WithMany("RestaurantIntros")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_RestaurantIntro_Users");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Shift", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Staff", "Staff")
                        .WithMany("Shifts")
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("FK__Shifts__StaffId__3D2915A8");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Staff", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.User", "User")
                        .WithMany("Staff")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Staffs__UserId__3E1D39E1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.StockTransaction", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.InventoryBatch", "Batch")
                        .WithMany("StockTransactions")
                        .HasForeignKey("BatchId")
                        .HasConstraintName("FK_StockTransactions_Batch");

                    b.HasOne("DomainAccessLayer.Models.Ingredient", "Ingredient")
                        .WithMany("StockTransactions")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK__StockTran__Ingre__3F115E1A");

                    b.Navigation("Batch");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.SystemLogo", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.User", "CreatedByNavigation")
                        .WithMany("SystemLogos")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_SystemLogos_Users");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.User", b =>
                {
                    b.HasOne("DomainAccessLayer.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__RoleId__41EDCAC5");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Combo", b =>
                {
                    b.Navigation("ComboItems");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Ingredient", b =>
                {
                    b.Navigation("InventoryBatches");

                    b.Navigation("PurchaseOrderDetails");

                    b.Navigation("Recipes");

                    b.Navigation("StockTransactions");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.InventoryBatch", b =>
                {
                    b.Navigation("StockTransactions");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.KitchenTicket", b =>
                {
                    b.Navigation("KitchenTicketDetails");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.MenuCategory", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.MenuItem", b =>
                {
                    b.Navigation("ComboItems");

                    b.Navigation("OrderDetails");

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Order", b =>
                {
                    b.Navigation("KitchenTickets");

                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.OrderDetail", b =>
                {
                    b.Navigation("KitchenTicketDetails");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderDetails");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.PurchaseOrderDetail", b =>
                {
                    b.Navigation("InventoryBatches");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Reservation", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ReservationTables");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Staff", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Payrolls");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Supplier", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Table", b =>
                {
                    b.Navigation("ReservationTables");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.User", b =>
                {
                    b.Navigation("Announcements");

                    b.Navigation("BrandBanners");

                    b.Navigation("Customers");

                    b.Navigation("Events");

                    b.Navigation("MarketingCampaigns");

                    b.Navigation("Regulations");

                    b.Navigation("RestaurantIntros");

                    b.Navigation("Staff");

                    b.Navigation("SystemLogos");
                });

            modelBuilder.Entity("DomainAccessLayer.Models.Voucher", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
